@use './breakpoint'as *;

/*typography start here*/
@mixin headingOne {
    font-size: 56px;
    font-style: normal;
    font-weight: 600;
    line-height: 68px;

    @include respond-to($screen767) {
        font-size: 36px;
        font-style: normal;
        font-weight: 600;
        line-height: 44px;
    }
}

@mixin headingTwo {
    font-size: 40px;
    font-style: normal;
    font-weight: 600;
    line-height: 48px;

    @include respond-to($screen767) {
        font-size: 28px;
        font-style: normal;
        font-weight: 600;
        line-height: 34px;
    }
}

@mixin headingThree {
    font-size: 32px;
    font-style: normal;
    font-weight: 600;
    line-height: 38px;

    @include respond-to($screen767) {
        font-size: 24px;
        font-style: normal;
        font-weight: 600;
        line-height: 32px;
    }
}

@mixin headingFour {
    font-size: 24px;
    font-style: normal;
    font-weight: 600;
    line-height: 32px;

    @include respond-to($screen767) {
        font-size: 20px;
        font-style: normal;
        font-weight: 600;
        line-height: 30px;
    }
}

@mixin headingFive {
    font-size: 20px;
    font-style: normal;
    font-weight: 600;
    line-height: 30px;

    @include respond-to($screen767) {
        font-size: 16px;
        font-style: normal;
        font-weight: 600;
        line-height: 24px;
    }
}

@mixin headingSix {
    font-size: 16px;
    font-style: normal;
    font-weight: 600;
    line-height: 24px;

    @include respond-to($screen767) {
        font-size: 14px;
        font-style: normal;
        font-weight: 600;
        line-height: 22px;
    }
}

@mixin bodyXl {
    font-size: 20px;
    font-style: normal;
    font-weight: 500;
    line-height: 30px;
}

@mixin bodyL {
    font-size: 18px;
    font-style: normal;
    font-weight: 500;
    line-height: 28px;
}

@mixin bodyM {
    font-size: 16px;
    font-style: normal;
    font-weight: 500;
    line-height: 24px;
}

@mixin bodyBase {
    font-size: 14px;
    font-style: normal;
    font-weight: 500;
    line-height: 20px;
}

@mixin bodyMeta {
    font-size: 12px;
    font-style: normal;
    font-weight: 500;
    line-height: 18px;
}

@mixin bodyMicro {
    font-size: 10px;
    font-style: normal;
    font-weight: 500;
    line-height: 14px;
}

/*typography end here*/
@mixin transition($transition) {
    -webkit-transition: $transition;
    -moz-transition: $transition;
    -o-transition: $transition;
    transition: $transition;
}

/*flex cross browser mixin*/
@mixin flexbox {
    display: -webkit-box;
    display: -moz-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
}

@mixin justify-content($value: flex-start) {
    @if $value==flex-start {
        -webkit-box-pack: start;
        -moz-box-pack: start;
        -ms-flex-pack: start;
    }

    @else if $value==end {
        -webkit-box-pack: end;
        -moz-box-pack: end;
        -ms-flex-pack: end;
    }

    @else if $value==space-between {
        -webkit-box-pack: justify;
        -moz-box-pack: justify;
        -ms-flex-pack: justify;
    }

    @else if $value==space-around {
        -ms-flex-pack: distribute;
    }

    @else {
        -webkit-box-pack: $value;
        -moz-box-pack: $value;
        -ms-flex-pack: $value;
    }

    -webkit-justify-content: $value;
    justify-content: $value;
}

@mixin align-items($value: stretch) {
    @if $value==flex-start {
        -webkit-box-align: start;
        -moz-box-align: start;
        -ms-flex-align: start;
    }

    @else if $value==end {
        -webkit-box-align: end;
        -moz-box-align: end;
        -ms-flex-align: end;
    }

    @else {
        -webkit-box-align: $value;
        -moz-box-align: $value;
        -ms-flex-align: $value;
    }

    -webkit-align-items: $value;
    align-items: $value;
}

@mixin flex-direction($value: row) {
    @if $value==row-reverse {
        -webkit-box-direction: reverse;
        -webkit-box-orient: horizontal;
        -moz-box-direction: reverse;
        -moz-box-orient: horizontal;
    }

    @else if $value==column {
        -webkit-box-direction: normal;
        -webkit-box-orient: vertical;
        -moz-box-direction: normal;
        -moz-box-orient: vertical;
    }

    @else if $value==column-reverse {
        -webkit-box-direction: reverse;
        -webkit-box-orient: vertical;
        -moz-box-direction: reverse;
        -moz-box-orient: vertical;
    }

    @else {
        -webkit-box-direction: normal;
        -webkit-box-orient: horizontal;
        -moz-box-direction: normal;
        -moz-box-orient: horizontal;
    }

    -webkit-flex-direction: $value;
    -ms-flex-direction: $value;
    flex-direction: $value;
}

@mixin flex-wrap($value: nowrap) {
    // No Webkit/FF Box fallback.
    -webkit-flex-wrap: $value;

    @if $value==nowrap {
        -ms-flex-wrap: none;
    }

    @else {
        -ms-flex-wrap: $value;
    }

    flex-wrap: $value;
}

@mixin flex($fg: 1, $fs: 0, $fb: auto) {
    // Set a variable to be used by box-flex properties
    $fg-boxflex: $fg;

    // Box-Flex only supports a flex-grow value so lets grab the
    // first item in the list and just return that.
    @if type-of($fg)=="list" {
        $fg-boxflex: nth($fg, 1);
    }

    -webkit-box: $fg-boxflex;
    -moz-box: $fg-boxflex;
    -webkit-flex: $fg $fs $fb;
    -ms-flex: $fg $fs $fb;
    flex: $fg $fs $fb;
}

/*flex cross browser mixin*/